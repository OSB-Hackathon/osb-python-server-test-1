# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.context import Context  # noqa: F401,E501
from swagger_server.models.service_instance_previous_values import ServiceInstancePreviousValues  # noqa: F401,E501
from swagger_server import util


class ServiceInstanceUpdateRequestBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, context: Context=None, service_id: str=None, plan_id: str=None, parameters: Object=None, previous_values: ServiceInstancePreviousValues=None):  # noqa: E501
        """ServiceInstanceUpdateRequestBody - a model defined in Swagger

        :param context: The context of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :type context: Context
        :param service_id: The service_id of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :type service_id: str
        :param plan_id: The plan_id of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :type plan_id: str
        :param parameters: The parameters of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :type parameters: Object
        :param previous_values: The previous_values of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :type previous_values: ServiceInstancePreviousValues
        """
        self.swagger_types = {
            'context': Context,
            'service_id': str,
            'plan_id': str,
            'parameters': Object,
            'previous_values': ServiceInstancePreviousValues
        }

        self.attribute_map = {
            'context': 'context',
            'service_id': 'service_id',
            'plan_id': 'plan_id',
            'parameters': 'parameters',
            'previous_values': 'previous_values'
        }
        self._context = context
        self._service_id = service_id
        self._plan_id = plan_id
        self._parameters = parameters
        self._previous_values = previous_values

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInstanceUpdateRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInstanceUpdateRequestBody of this ServiceInstanceUpdateRequestBody.  # noqa: E501
        :rtype: ServiceInstanceUpdateRequestBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self) -> Context:
        """Gets the context of this ServiceInstanceUpdateRequestBody.


        :return: The context of this ServiceInstanceUpdateRequestBody.
        :rtype: Context
        """
        return self._context

    @context.setter
    def context(self, context: Context):
        """Sets the context of this ServiceInstanceUpdateRequestBody.


        :param context: The context of this ServiceInstanceUpdateRequestBody.
        :type context: Context
        """

        self._context = context

    @property
    def service_id(self) -> str:
        """Gets the service_id of this ServiceInstanceUpdateRequestBody.


        :return: The service_id of this ServiceInstanceUpdateRequestBody.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id: str):
        """Sets the service_id of this ServiceInstanceUpdateRequestBody.


        :param service_id: The service_id of this ServiceInstanceUpdateRequestBody.
        :type service_id: str
        """
        if service_id is None:
            raise ValueError("Invalid value for `service_id`, must not be `None`")  # noqa: E501

        self._service_id = service_id

    @property
    def plan_id(self) -> str:
        """Gets the plan_id of this ServiceInstanceUpdateRequestBody.


        :return: The plan_id of this ServiceInstanceUpdateRequestBody.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id: str):
        """Sets the plan_id of this ServiceInstanceUpdateRequestBody.


        :param plan_id: The plan_id of this ServiceInstanceUpdateRequestBody.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def parameters(self) -> Object:
        """Gets the parameters of this ServiceInstanceUpdateRequestBody.


        :return: The parameters of this ServiceInstanceUpdateRequestBody.
        :rtype: Object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: Object):
        """Sets the parameters of this ServiceInstanceUpdateRequestBody.


        :param parameters: The parameters of this ServiceInstanceUpdateRequestBody.
        :type parameters: Object
        """

        self._parameters = parameters

    @property
    def previous_values(self) -> ServiceInstancePreviousValues:
        """Gets the previous_values of this ServiceInstanceUpdateRequestBody.


        :return: The previous_values of this ServiceInstanceUpdateRequestBody.
        :rtype: ServiceInstancePreviousValues
        """
        return self._previous_values

    @previous_values.setter
    def previous_values(self, previous_values: ServiceInstancePreviousValues):
        """Sets the previous_values of this ServiceInstanceUpdateRequestBody.


        :param previous_values: The previous_values of this ServiceInstanceUpdateRequestBody.
        :type previous_values: ServiceInstancePreviousValues
        """

        self._previous_values = previous_values
