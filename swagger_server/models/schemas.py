# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.service_binding_schema import ServiceBindingSchema  # noqa: F401,E501
from swagger_server.models.service_instance_schema import ServiceInstanceSchema  # noqa: F401,E501
from swagger_server import util


class Schemas(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, service_instance: ServiceInstanceSchema=None, service_binding: ServiceBindingSchema=None):  # noqa: E501
        """Schemas - a model defined in Swagger

        :param service_instance: The service_instance of this Schemas.  # noqa: E501
        :type service_instance: ServiceInstanceSchema
        :param service_binding: The service_binding of this Schemas.  # noqa: E501
        :type service_binding: ServiceBindingSchema
        """
        self.swagger_types = {
            'service_instance': ServiceInstanceSchema,
            'service_binding': ServiceBindingSchema
        }

        self.attribute_map = {
            'service_instance': 'service_instance',
            'service_binding': 'service_binding'
        }
        self._service_instance = service_instance
        self._service_binding = service_binding

    @classmethod
    def from_dict(cls, dikt) -> 'Schemas':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Schemas of this Schemas.  # noqa: E501
        :rtype: Schemas
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_instance(self) -> ServiceInstanceSchema:
        """Gets the service_instance of this Schemas.


        :return: The service_instance of this Schemas.
        :rtype: ServiceInstanceSchema
        """
        return self._service_instance

    @service_instance.setter
    def service_instance(self, service_instance: ServiceInstanceSchema):
        """Sets the service_instance of this Schemas.


        :param service_instance: The service_instance of this Schemas.
        :type service_instance: ServiceInstanceSchema
        """

        self._service_instance = service_instance

    @property
    def service_binding(self) -> ServiceBindingSchema:
        """Gets the service_binding of this Schemas.


        :return: The service_binding of this Schemas.
        :rtype: ServiceBindingSchema
        """
        return self._service_binding

    @service_binding.setter
    def service_binding(self, service_binding: ServiceBindingSchema):
        """Sets the service_binding of this Schemas.


        :param service_binding: The service_binding of this Schemas.
        :type service_binding: ServiceBindingSchema
        """

        self._service_binding = service_binding
